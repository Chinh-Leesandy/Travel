import {
  Box,
  HStack,
  IconButton,
  Input,
  Tag,
  TagCloseButton,
  TagLabel,
  usePopper
} from "./chunk-ICSVUBIY.js";
import {
  StylesProvider,
  chakra,
  createContext,
  forwardRef,
  mergeRefs,
  mode,
  omitThemingProps,
  useMultiStyleConfig,
  useStyles
} from "./chunk-6RJIPWT7.js";
import {
  require_jsx_runtime
} from "./chunk-CRNJR6QK.js";
import "./chunk-QAWZVNN3.js";
import "./chunk-75ZI7VCT.js";
import "./chunk-SWASOQDX.js";
import "./chunk-W6L2VRDA.js";
import {
  require_react
} from "./chunk-ZMLY2J2T.js";
import {
  __toESM
} from "./chunk-4B2QHNJT.js";

// node_modules/chakra-multiselect/dist/index.modern.mjs
var v = __toESM(require_react(), 1);
var import_react2 = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function _(t) {
  return { bg: mode("#fff", "gray.700")(t), boxShadow: mode("sm", "dark-lg")(t), color: "inherit", w: "full", py: "2", zIndex: 1, borderRadius: "md", borderWidth: "1px", maxH: "64", overflowY: "auto", overscrollBehaviorY: "contain" };
}
var z = { display: "flex", flex: 1, flexWrap: "wrap", alignItems: "center" };
var E = { display: "block", textAlign: "start" };
function M(t) {
  return { cursor: "pointer", transition: "background 50ms ease-out", _focus: { bg: mode("gray.50", "whiteAlpha.100")(t), boxShadow: "outline" }, _active: { bg: mode("gray.50", "whiteAlpha.100")(t) }, _expanded: { bg: mode("gray.50", "whiteAlpha.100")(t) }, _selected: { bg: mode("gray.100", "whiteAlpha.300")(t) }, _disabled: { opacity: 0.4, cursor: "not-allowed" } };
}
function k(e) {
  return { borderRadius: "full", variant: "solid", colorscheme: e.colorscheme };
}
function T(t) {
  return { variant: "ghost", _hover: { bg: mode("gray.200", "whiteAlpha.300")(t) }, _focus: { bg: mode("gray.200", "whiteAlpha.300")(t), boxShadow: "outline" }, _active: { bg: mode("gray.100", "whiteAlpha.100")(t) }, colorscheme: t.colorscheme };
}
var L = { h: "auto", minW: 72, pr: 1 };
var R = { display: "flex", alignItems: "center" };
var P = { fontWeight: "semibold" };
var A = { display: "inline", h: "full", border: 0, borderColor: "inherit", my: 1, opacity: 0.8 };
var V = { defaultProps: { size: "md" }, parts: ["item", "selectedItem", "list", "textList", "selectedList", "actionGroup", "control", "input", "button", "groupTitle", "divider", "label"], sizes: { sm: { control: { minH: 8, spacing: 1 }, input: { p: "px" }, actionGroup: { spacing: "0" }, list: { fontSize: "sm" }, item: { py: 1, px: 2 }, textList: { py: 0, px: 1 }, selectedItem: { m: "px" }, selectedList: { py: "px" }, groupTitle: { mx: 2, my: 1, fontSize: "sm" } }, md: { control: { minH: 10, spacing: 1 }, input: { p: "2px" }, actionGroup: { spacing: "0" }, list: { fontSize: "md" }, item: { py: 2, px: 3 }, textList: { p: 1 }, selectedItem: { m: "2px" }, selectedList: { py: "2px" }, groupTitle: { mx: 4, my: 2, fontSize: "sm" } }, lg: { control: { minH: 12, spacing: 2 }, input: { p: 1 }, actionGroup: { spacing: "0" }, list: { fontSize: "lg" }, item: { py: 2, px: 3 }, textList: { py: 1, px: 2 }, selectedItem: { m: 1 }, selectedList: { py: 1 }, groupTitle: { mx: 4, my: 2, fontSize: "sm" } } }, baseStyle: (e) => ({ list: _(e), selectedList: z, item: M(e), selectedItem: k(e), button: T(e), actionGroup: R, control: L, input: { bgColor: "transparent", appearance: "none", flex: 1, outline: 0 }, groupTitle: P, divider: A, label: E }) };
function D() {
  return D = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, D.apply(this, arguments);
}
function N(e, t) {
  if (null == e) return {};
  var n, i, r = {}, o = Object.keys(e);
  for (i = 0; i < o.length; i++) t.indexOf(n = o[i]) >= 0 || (r[n] = e[n]);
  return r;
}
function j(e) {
  return "object" == typeof e && null != e && 1 === e.nodeType;
}
function B(e, t) {
  return (!t || "hidden" !== e) && "visible" !== e && "clip" !== e;
}
function W(e, t) {
  if (e.clientHeight < e.scrollHeight || e.clientWidth < e.scrollWidth) {
    var n = getComputedStyle(e, null);
    return B(n.overflowY, t) || B(n.overflowX, t) || function(e2) {
      var t2 = function(e3) {
        if (!e3.ownerDocument || !e3.ownerDocument.defaultView) return null;
        try {
          return e3.ownerDocument.defaultView.frameElement;
        } catch (e4) {
          return null;
        }
      }(e2);
      return !!t2 && (t2.clientHeight < e2.scrollHeight || t2.clientWidth < e2.scrollWidth);
    }(e);
  }
  return false;
}
function F(e, t, n, i, r, o, l, s) {
  return o < e && l > t || o > e && l < t ? 0 : o <= e && s <= n || l >= t && s >= n ? o - e - i : l > t && s < n || o < e && s > n ? l - t + r : 0;
}
var H = ["onKeyDown"];
var K = ["refKey", "ref", "onChange", "onFocus", "onClick", "onBlur"];
var G = ["index", "key", "onClick", "onMouseEnter", "option"];
var $ = ["selected"];
var U;
var Y;
!function(e) {
  e.SingleCreate = "singleCreate", e.SingleRemove = "singleRemove", e.SingleSelect = "singleSelect", e.SingleClear = "singleClear", e.MultiCreate = "multiCreate", e.MultiRemove = "multiRemove", e.MultiSelect = "multiSelect", e.MultiClear = "multiClear";
}(U || (U = {})), function(e) {
  e.SetOpen = "setOpen", e.SetSearch = "setSearch", e.HighlightIndex = "highlightIndex";
}(Y || (Y = {}));
var X = [];
var q = [];
var J = { searchValue: "", resolvedSearchValue: "", isOpen: false, highlightedIndex: 0 };
var Q = (e, t) => t;
var Z = (e, t, n, i) => {
  i.current && function(e2, t2) {
    if (!e2 || !t2) return;
    const n2 = function(e3, t3) {
      var n3 = window, i2 = t3.scrollMode, r = t3.block, o = t3.inline, l = t3.boundary, s = t3.skipOverflowHiddenElements, a = "function" == typeof l ? l : function(e4) {
        return e4 !== l;
      };
      if (!j(e3)) throw new TypeError("Invalid target");
      for (var c = document.scrollingElement || document.documentElement, u = [], d = e3; j(d) && a(d); ) {
        if ((d = d.parentElement) === c) {
          u.push(d);
          break;
        }
        null != d && d === document.body && W(d) && !W(document.documentElement) || null != d && W(d, s) && u.push(d);
      }
      for (var h = n3.visualViewport ? n3.visualViewport.width : innerWidth, p = n3.visualViewport ? n3.visualViewport.height : innerHeight, f = window.scrollX || pageXOffset, m = window.scrollY || pageYOffset, g = e3.getBoundingClientRect(), v2 = g.height, b2 = g.width, y2 = g.top, x2 = g.right, S2 = g.bottom, I2 = g.left, O2 = "start" === r || "nearest" === r ? y2 : "end" === r ? S2 : y2 + v2 / 2, w2 = "center" === o ? I2 + b2 / 2 : "end" === o ? x2 : I2, C2 = [], _2 = 0; _2 < u.length; _2++) {
        var z2 = u[_2], E2 = z2.getBoundingClientRect(), M2 = E2.height, k2 = E2.width, T2 = E2.top, L2 = E2.right, R2 = E2.bottom, P2 = E2.left;
        if ("if-needed" === i2 && y2 >= 0 && I2 >= 0 && S2 <= p && x2 <= h && y2 >= T2 && S2 <= R2 && I2 >= P2 && x2 <= L2) return C2;
        var A2 = getComputedStyle(z2), V2 = parseInt(A2.borderLeftWidth, 10), D2 = parseInt(A2.borderTopWidth, 10), N2 = parseInt(A2.borderRightWidth, 10), B2 = parseInt(A2.borderBottomWidth, 10), H2 = 0, K2 = 0, G2 = "offsetWidth" in z2 ? z2.offsetWidth - z2.clientWidth - V2 - N2 : 0, $2 = "offsetHeight" in z2 ? z2.offsetHeight - z2.clientHeight - D2 - B2 : 0;
        if (c === z2) H2 = "start" === r ? O2 : "end" === r ? O2 - p : "nearest" === r ? F(m, m + p, p, D2, B2, m + O2, m + O2 + v2, v2) : O2 - p / 2, K2 = "start" === o ? w2 : "center" === o ? w2 - h / 2 : "end" === o ? w2 - h : F(f, f + h, h, V2, N2, f + w2, f + w2 + b2, b2), H2 = Math.max(0, H2 + m), K2 = Math.max(0, K2 + f);
        else {
          H2 = "start" === r ? O2 - T2 - D2 : "end" === r ? O2 - R2 + B2 + $2 : "nearest" === r ? F(T2, R2, M2, D2, B2 + $2, O2, O2 + v2, v2) : O2 - (T2 + M2 / 2) + $2 / 2, K2 = "start" === o ? w2 - P2 - V2 : "center" === o ? w2 - (P2 + k2 / 2) + G2 / 2 : "end" === o ? w2 - L2 + N2 + G2 : F(P2, L2, k2, V2, N2 + G2, w2, w2 + b2, b2);
          var U2 = z2.scrollLeft, Y2 = z2.scrollTop;
          O2 += Y2 - (H2 = Math.max(0, Math.min(Y2 + H2, z2.scrollHeight - M2 + $2))), w2 += U2 - (K2 = Math.max(0, Math.min(U2 + K2, z2.scrollWidth - k2 + G2)));
        }
        C2.push({ el: z2, top: H2, left: K2 });
      }
      return C2;
    }(e2, { boundary: t2, block: "nearest", scrollMode: "if-needed" });
    n2.forEach(({ el: e3, top: t3, left: n3 }) => {
      e3.scrollTop = t3, e3.scrollLeft = n3;
    });
  }(t.current, n.current);
};
var ee = (e) => `${e.charAt(0).toUpperCase()}${e.substring(1)}`;
var te = (e, t = "") => `${t}${null == e ? void 0 : e.value}`;
var ne = (e) => "string" == typeof e ? { value: e, label: ee(e) } : e;
var ie = (e) => e.length > 1e4 ? 1e3 : e.length > 1e3 ? 200 : 0;
var re = (e, t, n) => e.filter((e2) => n(e2).value.toString().toLowerCase().includes(t.toString().toLowerCase())).sort((e2) => n(e2).value.toString().toLowerCase().indexOf(t.toString().toLowerCase()));
function oe(e, t, n) {
  return n ? D({}, e, "function" == typeof t ? { [n]: t(e[n]) } : { [n]: t }) : "function" == typeof t ? t(e) : t;
}
var le;
!function(e) {
  e.List = "list", e.Input = "input", e.Both = "both";
}(le || (le = {}));
var [se, ae] = createContext({ strict: false, name: "SelectContext" });
var [ce, ue] = createContext({ strict: false, name: "SelectInputContext" });
var [de, he] = createContext({ strict: false, name: "SelectedContext" });
var [pe, fe] = createContext({ strict: false, name: "SelectedListContext" });
var [me, ge] = createContext({ strict: false, name: "SelectActionContext" });
var [ve, be] = createContext({ strict: false, name: "SelectIdContext" });
function ye({ create: e = false, single: n = false, disabled: i = false, selectionVisibleIn: r = le.Input, getDebounce: o = ie, getOption: l = ne, stateReducer: s = Q, filterFn: a = re, scrollToIndex: c = Z, shiftAmount: u = 5, duplicates: d, options: h, value: p, onChange: f, placement: m = "bottom-start", placeholder: g, searchPlaceholder: v2 }) {
  const [{ searchValue: O2, resolvedSearchValue: w2, isOpen: C2, highlightedIndex: _2 }, z2] = function(e2, t) {
    const n2 = (0, import_react2.useRef)();
    n2.current = t;
    const [i2, r2] = (0, import_react2.useState)(e2);
    return [i2, (0, import_react2.useCallback)((e3, t2) => {
      if (!t2) throw new Error("An action type is required to update the state");
      return r2((i3) => n2.current(i3, e3(i3), t2));
    }, [r2])];
  }(J, s), E2 = !n, M2 = E2 && !!(Array.isArray(p) ? p.length > 0 : p), k2 = (0, import_react2.useRef)(), T2 = (0, import_react2.useRef)([]), L2 = (0, import_react2.useRef)(""), R2 = (0, import_react2.useRef)(), P2 = (0, import_react2.useRef)(), A2 = (0, import_react2.useRef)({}), V2 = (0, import_react2.useRef)(), j2 = (0, import_react2.useRef)(), B2 = (0, import_react2.useRef)(), W2 = (0, import_react2.useRef)(_2), F2 = (0, import_react2.useRef)(), $2 = (0, import_react2.useRef)(false), ee2 = usePopper({ placement: m });
  W2.current = _2, j2.current = a, B2.current = c, V2.current = f, E2 && void 0 === p && (p = X), h || (h = q);
  const te2 = h;
  h = (0, import_react2.useMemo)(() => {
    var e2, t;
    return r !== le.Input ? null == (e2 = h) ? void 0 : e2.map((e3) => {
      var t2;
      return D({}, l(e3), { selected: null == (t2 = Array.isArray(p) ? p : [p || ""]) ? void 0 : t2.some((t3) => l(t3).value === l(e3).value) });
    }) : E2 && !d ? null == (t = h) ? void 0 : t.filter((e3) => {
      var t2;
      return !(null != (t2 = p) && t2.some((t3) => l(t3).value === l(e3).value));
    }) : h;
  }, [h, p, d, E2, l, r]);
  const se2 = (0, import_react2.useMemo)(() => E2 ? p.map((e2) => te2.find((t) => l(t).value === l(e2).value) || l(e2)) : te2.find((e2) => l(e2).value === l(p).value) || l(p), [E2, p, te2, l]);
  h = (0, import_react2.useMemo)(() => w2 ? null == j2.current ? void 0 : j2.current(h, w2, l) : h, [h, w2, l]), h = (0, import_react2.useMemo)(() => e && O2 ? [D({ created: true }, l(O2)), ...h] : h, [e, O2, h, l]), L2.current = p, T2.current = h;
  const ae2 = (0, import_react2.useCallback)((e2) => {
    z2((t) => oe(t, e2, "isOpen"), Y.SetOpen);
  }, []), ce2 = (0, import_react2.useCallback)(() => {
    ae2(false);
  }, []), ue2 = (0, import_react2.useCallback)(() => {
    ae2(true);
  }, []), de2 = function(e2, t = 0) {
    const n2 = (0, import_react2.useRef)(null), i2 = (0, import_react2.useRef)();
    return i2.current = e2, (0, import_react2.useEffect)(() => () => {
      clearTimeout(n2.current);
    }, [t]), (0, import_react2.useCallback)(async (...e3) => (n2.current && clearTimeout(n2.current), new Promise((r2, o2) => {
      n2.current = setTimeout(() => {
        n2.current = null;
        try {
          r2(i2.current(...e3));
        } catch (e4) {
          o2(e4);
        }
      }, t);
    })), [t]);
  }((e2) => {
    z2((t) => oe(t, e2, "resolvedSearchValue"), Y.SetSearch);
  }, o(h)), he2 = (0, import_react2.useCallback)((e2) => {
    z2((t) => oe(t, e2, "searchValue"), Y.SetSearch), de2(e2);
  }, []), pe2 = (0, import_react2.useCallback)((e2) => {
    const t = T2.current;
    z2((n2) => D({}, n2, { highlightedIndex: Math.min(Math.max(0, "function" == typeof e2 ? e2(n2.highlightedIndex) : e2), t.length - 1) }), Y.HighlightIndex);
  }, []), fe2 = (0, import_react2.useCallback)((t) => {
    const n2 = T2.current[t];
    if (n2) {
      const e2 = l(n2);
      if (E2) {
        const t2 = L2.current;
        !d && t2.some((t3) => l(t3).value === e2.value) || null == V2.current || V2.current([...t2, e2], { action: e2.created ? U.MultiCreate : U.MultiSelect, value: e2 });
      } else null == V2.current || V2.current(e2.value, { action: e2.created ? U.SingleCreate : U.SingleSelect, value: e2 });
    }
    (e || E2) && he2(""), E2 || ce2();
  }, [E2, e, d, l]), me2 = (0, import_react2.useCallback)(() => {
    null == V2.current || V2.current(E2 ? [] : "", { action: E2 ? U.MultiClear : U.SingleClear, value: "" });
  }, [E2]), ge2 = (0, import_react2.useCallback)((e2) => {
    const t = "number" == typeof e2, n2 = Array.isArray(L2.current), i2 = n2 ? L2.current : [L2.current], r2 = i2.filter((n3, i3) => t ? i3 !== e2 : l(e2).value !== l(n3).value);
    n2 ? V2.current(r2, { action: U.MultiRemove, value: l(t ? i2[e2] : e2).value }) : V2.current(r2[0] || "", { action: U.SingleRemove, value: l(t ? i2[e2] : e2).value });
  }, [l]), ve2 = (0, import_react2.useCallback)((e2) => {
    i || (he2(e2.target.value), ue2());
  }, [i]), be2 = (0, import_react2.useCallback)(() => {
    i || (e && !E2 || he2(""), ue2());
  }, [e, E2, i]), ye2 = (e2, t) => ({ shift: n2, meta: i2 }, r2) => {
    r2.preventDefault();
    const o2 = t || i2 ? 1e12 : e2 || n2 ? u - 1 : 1;
    ue2(), $2.current = true, pe2((e3) => e3 - o2);
  }, xe2 = (e2, t) => ({ shift: n2, meta: i2 }, r2) => {
    r2.preventDefault();
    const o2 = t || i2 ? 1e12 : e2 || n2 ? u - 1 : 1;
    ue2(), $2.current = true, pe2((e3) => e3 + o2);
  }, Se2 = (0, import_react2.useCallback)((e2, t) => {
    if (C2) {
      const e3 = T2.current;
      (O2 || e3[W2.current]) && t.preventDefault(), e3[W2.current] && fe2(W2.current);
    }
  }, [C2, O2]), Ie2 = (0, import_react2.useCallback)(() => {
    const e2 = L2.current, t = E2 ? e2[e2.length - 1] : e2;
    (E2 && !O2 || !E2 && t) && (ge2(t), he2(""));
  }, [O2, E2]), Oe2 = (we2 = { ArrowUp: ye2(), ArrowDown: xe2(), PageUp: ye2(true), PageDown: xe2(true), Home: ye2(false, true), End: xe2(false, true), Escape: ce2, Tab: ce2, Enter: Se2, Backspace: Ie2 }, (e2 = {}) => {
    let { onKeyDown: t } = e2;
    return D({}, N(e2, H), { onKeyDown: (e3) => {
      const { keyCode: n2, key: i2, shiftKey: r2, metaKey: o2 } = e3, l2 = we2[i2] || we2[n2];
      l2 && l2({ keyCode: n2, key: i2, shift: r2, meta: o2 }, e3), t && t(e3);
    } });
  });
  var we2;
  const Ce2 = (0, import_react2.useCallback)((e2 = {}) => {
    let { refKey: t = "ref", ref: n2, onChange: i2, onFocus: r2, onClick: o2, onBlur: l2 } = e2, s2 = N(e2, K);
    return Oe2(D({ [t]: (e3) => {
      R2.current = e3, n2 && (n2.current = e3);
    }, value: (C2 ? O2 || se2.label : se2 ? null == se2 ? void 0 : se2.label : "") || "", placeholder: M2 && !O2 ? v2 : null != se2 && se2.label ? void 0 : g, onChange: (e3) => {
      ve2(e3), i2 && i2(e3);
    }, onFocus: (e3) => {
      be2(), r2 && r2(e3);
    }, onClick: (e3) => {
      be2(), o2 && o2(e3);
    }, onBlur: (e3) => {
      l2 && (e3.persist(), A2.current.cb = l2, A2.current.event = e3);
    } }, s2));
  }, [C2, O2, se2, be2, ve2, g, v2, M2]), _e2 = (0, import_react2.useCallback)((e2 = {}) => {
    let { index: t, key: n2 = t, onClick: i2, onMouseEnter: r2, option: o2 } = e2, l2 = N(e2, G);
    if ("number" != typeof t || t < 0) throw new Error("useSelect: The getOptionProps prop getter requires an index property, eg. 'getOptionProps({index: 1})'");
    return D({ key: n2, option: o2 }, l2, { onClick: (e3) => {
      void 0 !== o2.selected && o2.selected ? ge2(o2.value) : fe2(t), i2 && i2(e3);
    }, onMouseEnter: (e3) => {
      $2.current = false, pe2(t), r2 && r2(e3);
    } });
  }, []);
  return function(e2, t, n2, i2) {
    const r2 = (0, import_react2.useRef)(), o2 = (0, import_react2.useRef)(), l2 = (0, import_react2.useRef)();
    l2.current = t;
    const s2 = n2 || r2, a2 = i2 || o2, c2 = (0, import_react2.useCallback)((e3) => {
      if ("click" === e3.type && "touchstart" === e3.type) return;
      const t2 = a2.current, n3 = s2.current;
      null != t2 && t2.contains(e3.target) || null != n3 && n3.contains(e3.target) || l2.current(e3);
    }, []);
    (0, import_react2.useEffect)(() => (e2 && (document.addEventListener("touchstart", c2, true), document.addEventListener("click", c2, true)), () => {
      document.removeEventListener("touchstart", c2, true), document.removeEventListener("click", c2, true);
    }), [e2, c2]);
  }(C2, ce2, k2, P2), (0, import_react2.useEffect)(() => {
    C2 && i && ae2(false);
  }, [C2, i]), (0, import_react2.useEffect)(() => {
    O2 && pe2(0);
  }, [O2, pe2]), (0, import_react2.useEffect)(() => {
    var e2, t;
    pe2(0), !C2 && null != (e2 = A2.current) && e2.event && (null == (t = A2.current) || t.cb(A2.current.event), A2.current.event = null);
  }, [C2]), (0, import_react2.useEffect)(() => {
    null == B2.current || B2.current(_2, F2, k2, $2);
  }, [_2]), (0, import_react2.useEffect)(() => {
    C2 && R2.current && setTimeout(() => {
      var e2;
      null == (e2 = R2.current) || e2.focus();
    });
  }, [C2]), { multi: E2, clearable: M2, disabled: i, clearAll: me2, optionsRef: k2, controlRef: P2, popper: ee2, value: p, searchValue: O2, isOpen: C2, highlightedIndexRef: W2, highlightedValueRef: F2, enableScrollRef: $2, selectedOption: se2, visibleOptions: h, selectionVisibleIn: r, selectIndex: fe2, removeValue: ge2, setOpen: ae2, setSearch: he2, highlightIndex: pe2, getInputProps: Ce2, getOptionProps: _e2, getOption: l };
}
function xe(e = {}) {
  const { clearAll: t, clearable: i } = ge(), r = useStyles(), o = (0, import_react2.useCallback)((e2) => {
    e2.preventDefault(), e2.stopPropagation(), t();
  }, []);
  return D({}, e, { clearOnClick: o, clearable: i, __css: r.actionGroup });
}
function Se(e = {}) {
  const { selectLabelId: t, selectInputId: r } = be(), { getInputProps: o } = ue(), { fontSize: l } = useMultiStyleConfig("Input", e).field || {}, s = useStyles();
  return D({}, e, o(), { __css: D({ fontSize: l }, s.input), id: r, "aria-labelledby": t });
}
function Ie(e = {}) {
  const { selectLabelId: t, selectInputId: r } = be();
  return D({}, e, { __css: D({}, useMultiStyleConfig("FormLabel", e) || {}, useStyles().label), id: t, htmlFor: r });
}
function Oe(e = {}) {
  var t;
  const { isOpen: i, setOpen: r } = ge(), o = (0, import_react2.useCallback)((e2) => {
    e2.preventDefault(), e2.stopPropagation(), r((e3) => !e3);
  }, [r]), l = useStyles();
  return D({}, e, { __css: D({}, l.button, null == (t = i && l.button) ? void 0 : t._active), isOpen: i, onClick: o });
}
function we(e = {}) {
  return D({}, e, { __css: D({}, useStyles().button) });
}
function Ce(e = {}) {
  const { removeValue: t } = he(), i = useStyles(), r = (0, import_react2.useCallback)(() => t(e.value), [e.value]);
  return (0, import_react2.useMemo)(() => ({ key: e.key || e.value, onClick: r, __css: i.selectedItem, value: e.value, label: e.label || ee(e.value) }), [e.value, e.label, e.key, r, i.selectedItem]);
}
function _e(e = {}) {
  let { selected: t } = e, i = N(e, $);
  const { getOptionProps: r, highlightedIndexRef: o, highlightedValueRef: l, multi: s } = ae(), a = useStyles(), c = o.current === i.index;
  return (0, import_react2.useMemo)(() => {
    var e2, n;
    const o2 = { value: i.value, label: i.label || ee(i.value), selected: t };
    return D({}, r({ option: o2, key: i.key || te(o2), index: i.index }), { multi: s, highlightedRef: c ? l : void 0, __css: D({}, a.item, null == (e2 = t && a.item) ? void 0 : e2._selected, null == (n = c && a.item) ? void 0 : n._active) });
  }, [c, t, i.key, i.label, i.value, i.index, a.item, s]);
}
function ze() {
  const { isOpen: e, getOption: t, optionsRef: i, popper: r, visibleOptions: o, multi: l } = ae(), s = useStyles();
  return (0, import_react2.useMemo)(() => ({ ref: mergeRefs(i, r.popperRef), optionsRef: i, isOpen: e, visibleOptions: o, getOption: t, __css: s.list, "aria-multiselectable": l, "aria-hidden": !e }), [e, o, s.list, l]);
}
function Ee(e = {}) {
  const { visibleOptions: t, getOption: i } = ae(), { value: r, multi: o, selectionVisibleIn: l } = fe(), s = useStyles();
  return D({}, e, { multi: o, selectedItems: (0, import_react2.useMemo)(() => r && Array.isArray(r) ? r.map((e2) => i(e2)) : [], [r, t]), selectionVisibleIn: l, __css: s.selectedList, textList: { __css: s.textList } });
}
function Me(e = {}) {
  var t, r;
  const { isOpen: o, popper: l, controlRef: s, disabled: a } = ae(), c = useMultiStyleConfig("Input", e) || {}, u = useStyles();
  return D({}, e, (0, import_react2.useMemo)(() => ({ ref: mergeRefs(e.ref, s, l.referenceRef) }), [e.ref, s, l.referenceRef]), { isOpen: o, disabled: a, __css: D({}, u.field, u.control, { _focusWithin: null == (t = c.field) ? void 0 : t._focusVisible, _disabled: null == (r = c.field) ? void 0 : r._disabled }) });
}
var ke = (e = 21) => {
  const t = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_";
  let n = "";
  for (let i = 0; i < e; i++) n += t[Math.floor(Math.random() * t.length)];
  return n;
};
function Te() {
  const e = (0, import_react2.useRef)();
  return e.current || (e.current = ke()), e.current;
}
function Le(e = {}) {
  const t = e.getOption || ne, [n, i] = (0, import_react2.useState)(e.value), [r, o] = (0, import_react2.useState)(() => e.options.map(t)), l = (0, import_react2.useRef)();
  l.current = e.onChange;
  const s = (0, import_react2.useCallback)((e2, t2) => {
    i(e2), null == l.current || l.current(e2, t2);
  }, []);
  return { value: n, options: r, onChange: (0, import_react2.useCallback)((e2, n2) => {
    switch (null == n2 ? void 0 : n2.action) {
      case U.SingleCreate:
        s(e2, n2), o((n3) => {
          const i3 = t(e2);
          return n3.some((e3) => t(e3).value === i3.value) ? n3 : [D({}, i3, { created: true }), ...n3];
        });
        break;
      case U.SingleClear:
      case U.SingleRemove:
      case U.SingleSelect:
        s(e2, n2);
        break;
      case U.MultiCreate:
        const i2 = e2[e2.length - 1];
        s(e2, n2), o((e3) => {
          const n3 = t(i2);
          return e3.some((e4) => t(e4).value === n3.value) ? e3 : [D({}, n3, { created: true }), ...e3];
        });
        break;
      default:
        s(e2, n2);
    }
  }, [i, o, t]) };
}
function Re() {
  return Re = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, Re.apply(this, arguments);
}
function Pe() {
  return Pe = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, Pe.apply(this, arguments);
}
function Ae(e, t, n) {
  var i, r, o = null != (i = n.initialDeps) ? i : [];
  return function() {
    var i2;
    n.key && null != n.debug && n.debug() && (i2 = Date.now());
    var l, s = e();
    if (s.length === o.length && !s.some(function(e2, t2) {
      return o[t2] !== e2;
    })) return r;
    if (o = s, n.key && null != n.debug && n.debug() && (l = Date.now()), r = t.apply(void 0, s), n.key && null != n.debug && n.debug()) {
      var a = Math.round(100 * (Date.now() - i2)) / 100, c = Math.round(100 * (Date.now() - l)) / 100, u = c / 16, d = function(e2, t2) {
        for (e2 = String(e2); e2.length < t2; ) e2 = " " + e2;
        return e2;
      };
      console.info("%c⏱ " + d(c, 5) + " /" + d(a, 5) + " ms", "\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(" + Math.max(0, Math.min(120 - 120 * u, 120)) + "deg 100% 31%);", null == n ? void 0 : n.key);
    }
    return null == n || null == n.onChange || n.onChange(r), r;
  };
}
function Ve(e, t) {
  if (void 0 === e) throw new Error("Unexpected undefined" + (t ? ": " + t : ""));
  return e;
}
var De = function(e) {
  return e;
};
var Ne = function(e) {
  for (var t = Math.max(e.startIndex - e.overscan, 0), n = Math.min(e.endIndex + e.overscan, e.count - 1), i = [], r = t; r <= n; r++) i.push(r);
  return i;
};
var je = function(e, t) {
  var n = e.scrollElement;
  if (n) {
    var i = function(e2) {
      var n2 = e2.height;
      t({ width: Math.round(e2.width), height: Math.round(n2) });
    };
    i(n.getBoundingClientRect());
    var r = new ResizeObserver(function(e2) {
      var t2 = e2[0];
      if (null != t2 && t2.borderBoxSize) {
        var r2 = t2.borderBoxSize[0];
        if (r2) return void i({ width: r2.inlineSize, height: r2.blockSize });
      }
      i(n.getBoundingClientRect());
    });
    return r.observe(n, { box: "border-box" }), function() {
      r.unobserve(n);
    };
  }
};
var Be = function(e, t) {
  var n = e.scrollElement;
  if (n) {
    var i = function() {
      t(n[e.options.horizontal ? "scrollLeft" : "scrollTop"]);
    };
    return i(), n.addEventListener("scroll", i, { passive: true }), function() {
      n.removeEventListener("scroll", i);
    };
  }
};
var We = function(e, t, n) {
  if (null != t && t.borderBoxSize) {
    var i = t.borderBoxSize[0];
    if (i) return Math.round(i[n.options.horizontal ? "inlineSize" : "blockSize"]);
  }
  return Math.round(e.getBoundingClientRect()[n.options.horizontal ? "width" : "height"]);
};
var Fe = function(e, t, n) {
  var i, r, o = t.adjustments, l = t.behavior;
  null == (i = n.scrollElement) || null == i.scrollTo || i.scrollTo(((r = {})[n.options.horizontal ? "left" : "top"] = e + (void 0 === o ? 0 : o), r.behavior = l, r));
};
var He = function(e) {
  var t, n, i = this;
  this.unsubs = [], this.scrollElement = null, this.isScrolling = false, this.isScrollingTimeoutId = null, this.scrollToIndexTimeoutId = null, this.measurementsCache = [], this.itemSizeCache = /* @__PURE__ */ new Map(), this.pendingMeasuredCacheIndexes = [], this.scrollDirection = null, this.scrollAdjustments = 0, this.measureElementCache = /* @__PURE__ */ new Map(), this.observer = (t = null, n = function() {
    return t || ("undefined" != typeof ResizeObserver ? t = new ResizeObserver(function(e2) {
      e2.forEach(function(e3) {
        i._measureElement(e3.target, e3);
      });
    }) : null);
  }, { disconnect: function() {
    var e2;
    return null == (e2 = n()) ? void 0 : e2.disconnect();
  }, observe: function(e2) {
    var t2;
    return null == (t2 = n()) ? void 0 : t2.observe(e2, { box: "border-box" });
  }, unobserve: function(e2) {
    var t2;
    return null == (t2 = n()) ? void 0 : t2.unobserve(e2);
  } }), this.range = { startIndex: 0, endIndex: 0 }, this.setOptions = function(e2) {
    Object.entries(e2).forEach(function(t2) {
      void 0 === t2[1] && delete e2[t2[0]];
    }), i.options = Pe({ debug: false, initialOffset: 0, overscan: 1, paddingStart: 0, paddingEnd: 0, scrollPaddingStart: 0, scrollPaddingEnd: 0, horizontal: false, getItemKey: De, rangeExtractor: Ne, onChange: function() {
    }, measureElement: We, initialRect: { width: 0, height: 0 }, scrollMargin: 0, scrollingDelay: 150, indexAttribute: "data-index", initialMeasurementsCache: [], lanes: 1 }, e2);
  }, this.notify = function() {
    null == i.options.onChange || i.options.onChange(i);
  }, this.cleanup = function() {
    i.unsubs.filter(Boolean).forEach(function(e2) {
      return e2();
    }), i.unsubs = [], i.scrollElement = null;
  }, this._didMount = function() {
    return i.measureElementCache.forEach(i.observer.observe), function() {
      i.observer.disconnect(), i.cleanup();
    };
  }, this._willUpdate = function() {
    var e2 = i.options.getScrollElement();
    i.scrollElement !== e2 && (i.cleanup(), i.scrollElement = e2, i._scrollToOffset(i.scrollOffset, { adjustments: void 0, behavior: void 0 }), i.unsubs.push(i.options.observeElementRect(i, function(e3) {
      var t2 = i.scrollRect;
      i.scrollRect = e3, (i.options.horizontal ? e3.width !== t2.width : e3.height !== t2.height) && i.maybeNotify();
    })), i.unsubs.push(i.options.observeElementOffset(i, function(e3) {
      i.scrollAdjustments = 0, i.scrollOffset !== e3 && (null !== i.isScrollingTimeoutId && (clearTimeout(i.isScrollingTimeoutId), i.isScrollingTimeoutId = null), i.isScrolling = true, i.scrollDirection = i.scrollOffset < e3 ? "forward" : "backward", i.scrollOffset = e3, i.maybeNotify(), i.isScrollingTimeoutId = setTimeout(function() {
        i.isScrollingTimeoutId = null, i.isScrolling = false, i.scrollDirection = null, i.maybeNotify();
      }, i.options.scrollingDelay));
    })));
  }, this.getSize = function() {
    return i.scrollRect[i.options.horizontal ? "width" : "height"];
  }, this.memoOptions = Ae(function() {
    return [i.options.count, i.options.paddingStart, i.options.scrollMargin, i.options.getItemKey];
  }, function(e2, t2, n2, r) {
    return i.pendingMeasuredCacheIndexes = [], { count: e2, paddingStart: t2, scrollMargin: n2, getItemKey: r };
  }, { key: false }), this.getFurthestMeasurement = function(e2, t2) {
    for (var n2 = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Map(), o = t2 - 1; o >= 0; o--) {
      var l = e2[o];
      if (!n2.has(l.lane)) {
        var s = r.get(l.lane);
        if (null == s || l.end > s.end ? r.set(l.lane, l) : l.end < s.end && n2.set(l.lane, true), n2.size === i.options.lanes) break;
      }
    }
    return r.size === i.options.lanes ? Array.from(r.values()).sort(function(e3, t3) {
      return e3.end - t3.end;
    })[0] : void 0;
  }, this.getMeasurements = Ae(function() {
    return [i.memoOptions(), i.itemSizeCache];
  }, function(e2, t2) {
    var n2 = e2.count, r = e2.paddingStart, o = e2.scrollMargin, l = e2.getItemKey, s = i.pendingMeasuredCacheIndexes.length > 0 ? Math.min.apply(Math, i.pendingMeasuredCacheIndexes) : 0;
    i.pendingMeasuredCacheIndexes = [];
    for (var a = i.measurementsCache.slice(0, s), c = s; c < n2; c++) {
      var u = l(c), d = 1 === i.options.lanes ? a[c - 1] : i.getFurthestMeasurement(a, c), h = d ? d.end : r + o, p = t2.get(u), f = "number" == typeof p ? p : i.options.estimateSize(c);
      a[c] = { index: c, start: h, size: f, end: h + f, key: u, lane: d ? d.lane : c % i.options.lanes };
    }
    return i.measurementsCache = a, a;
  }, { key: "getMeasurements", debug: function() {
    return i.options.debug;
  } }), this.calculateRange = Ae(function() {
    return [i.getMeasurements(), i.getSize(), i.scrollOffset];
  }, function(e2, t2, n2) {
    return i.range = function(e3) {
      for (var t3 = e3.measurements, n3 = e3.outerSize, i2 = e3.scrollOffset, r = t3.length - 1, o = Ke(0, r, function(e4) {
        return t3[e4].start;
      }, i2), l = o; l < r && t3[l].end < i2 + n3; ) l++;
      return { startIndex: o, endIndex: l };
    }({ measurements: e2, outerSize: t2, scrollOffset: n2 });
  }, { key: "calculateRange", debug: function() {
    return i.options.debug;
  } }), this.maybeNotify = Ae(function() {
    var e2 = i.calculateRange();
    return [e2.startIndex, e2.endIndex, i.isScrolling];
  }, function() {
    i.notify();
  }, { key: "maybeNotify", debug: function() {
    return i.options.debug;
  }, initialDeps: [this.range.startIndex, this.range.endIndex, this.isScrolling] }), this.getIndexes = Ae(function() {
    return [i.options.rangeExtractor, i.calculateRange(), i.options.overscan, i.options.count];
  }, function(e2, t2, n2, i2) {
    return e2(Pe({}, t2, { overscan: n2, count: i2 }));
  }, { key: "getIndexes", debug: function() {
    return i.options.debug;
  } }), this.indexFromElement = function(e2) {
    var t2 = i.options.indexAttribute, n2 = e2.getAttribute(t2);
    return n2 ? parseInt(n2, 10) : (console.warn("Missing attribute name '" + t2 + "={index}' on measured element."), -1);
  }, this._measureElement = function(e2, t2) {
    var n2, r = i.indexFromElement(e2), o = i.measurementsCache[r];
    if (o) {
      var l = i.measureElementCache.get(o.key);
      if (!e2.isConnected) return i.observer.unobserve(e2), void (e2 === l && i.measureElementCache.delete(o.key));
      l !== e2 && (l && i.observer.unobserve(l), i.observer.observe(e2), i.measureElementCache.set(o.key, e2));
      var s = i.options.measureElement(e2, t2, i), a = s - (null != (n2 = i.itemSizeCache.get(o.key)) ? n2 : o.size);
      0 !== a && (o.start < i.scrollOffset && (i.options.debug && console.info("correction", a), i._scrollToOffset(i.scrollOffset, { adjustments: i.scrollAdjustments += a, behavior: void 0 })), i.pendingMeasuredCacheIndexes.push(r), i.itemSizeCache = new Map(i.itemSizeCache.set(o.key, s)), i.notify());
    }
  }, this.measureElement = function(e2) {
    e2 && i._measureElement(e2, void 0);
  }, this.getVirtualItems = Ae(function() {
    return [i.getIndexes(), i.getMeasurements()];
  }, function(e2, t2) {
    for (var n2 = [], i2 = 0, r = e2.length; i2 < r; i2++) n2.push(t2[e2[i2]]);
    return n2;
  }, { key: "getIndexes", debug: function() {
    return i.options.debug;
  } }), this.getVirtualItemForOffset = function(e2) {
    var t2 = i.getMeasurements();
    return Ve(t2[Ke(0, t2.length - 1, function(e3) {
      return Ve(t2[e3]).start;
    }, e2)]);
  }, this.getOffsetForAlignment = function(e2, t2) {
    var n2 = i.getSize();
    "auto" === t2 && (t2 = e2 <= i.scrollOffset ? "start" : e2 >= i.scrollOffset + n2 ? "end" : "start"), "start" === t2 || ("end" === t2 ? e2 -= n2 : "center" === t2 && (e2 -= n2 / 2));
    var r = i.options.horizontal ? "scrollWidth" : "scrollHeight", o = (i.scrollElement ? "document" in i.scrollElement ? i.scrollElement.document.documentElement[r] : i.scrollElement[r] : 0) - i.getSize();
    return Math.max(Math.min(o, e2), 0);
  }, this.getOffsetForIndex = function(e2, t2) {
    void 0 === t2 && (t2 = "auto"), e2 = Math.max(0, Math.min(e2, i.options.count - 1));
    var n2 = Ve(i.getMeasurements()[e2]);
    if ("auto" === t2) if (n2.end >= i.scrollOffset + i.getSize() - i.options.scrollPaddingEnd) t2 = "end";
    else {
      if (!(n2.start <= i.scrollOffset + i.options.scrollPaddingStart)) return [i.scrollOffset, t2];
      t2 = "start";
    }
    return [i.getOffsetForAlignment("end" === t2 ? n2.end + i.options.scrollPaddingEnd : n2.start - i.options.scrollPaddingStart, t2), t2];
  }, this.isDynamicMode = function() {
    return i.measureElementCache.size > 0;
  }, this.cancelScrollToIndex = function() {
    null !== i.scrollToIndexTimeoutId && (clearTimeout(i.scrollToIndexTimeoutId), i.scrollToIndexTimeoutId = null);
  }, this.scrollToOffset = function(e2, t2) {
    var n2 = void 0 === t2 ? {} : t2, r = n2.align, o = void 0 === r ? "start" : r, l = n2.behavior;
    i.cancelScrollToIndex(), "smooth" === l && i.isDynamicMode() && console.warn("The `smooth` scroll behavior is not fully supported with dynamic size."), i._scrollToOffset(i.getOffsetForAlignment(e2, o), { adjustments: void 0, behavior: l });
  }, this.scrollToIndex = function(e2, t2) {
    var n2 = void 0 === t2 ? {} : t2, r = n2.align, o = void 0 === r ? "auto" : r, l = n2.behavior;
    e2 = Math.max(0, Math.min(e2, i.options.count - 1)), i.cancelScrollToIndex(), "smooth" === l && i.isDynamicMode() && console.warn("The `smooth` scroll behavior is not fully supported with dynamic size.");
    var s = i.getOffsetForIndex(e2, o), a = s[1];
    i._scrollToOffset(s[0], { adjustments: void 0, behavior: l }), "smooth" !== l && i.isDynamicMode() && (i.scrollToIndexTimeoutId = setTimeout(function() {
      if (i.scrollToIndexTimeoutId = null, i.measureElementCache.has(i.options.getItemKey(e2))) {
        var t3 = i.getOffsetForIndex(e2, a);
        Math.abs(t3[0] - i.scrollOffset) < 1 || i.scrollToIndex(e2, { align: a, behavior: l });
      } else i.scrollToIndex(e2, { align: a, behavior: l });
    }));
  }, this.scrollBy = function(e2, t2) {
    var n2 = (void 0 === t2 ? {} : t2).behavior;
    i.cancelScrollToIndex(), "smooth" === n2 && i.isDynamicMode() && console.warn("The `smooth` scroll behavior is not fully supported with dynamic size."), i._scrollToOffset(i.scrollOffset + e2, { adjustments: void 0, behavior: n2 });
  }, this.getTotalSize = function() {
    var e2;
    return ((null == (e2 = i.getMeasurements()[i.options.count - 1]) ? void 0 : e2.end) || i.options.paddingStart) - i.options.scrollMargin + i.options.paddingEnd;
  }, this._scrollToOffset = function(e2, t2) {
    i.options.scrollToFn(e2, { behavior: t2.behavior, adjustments: t2.adjustments }, i);
  }, this.measure = function() {
    i.itemSizeCache = /* @__PURE__ */ new Map(), i.notify();
  }, this.setOptions(e), this.scrollRect = this.options.initialRect, this.scrollOffset = this.options.initialOffset, this.measurementsCache = this.options.initialMeasurementsCache, this.measurementsCache.forEach(function(e2) {
    i.itemSizeCache.set(e2.key, e2.size);
  }), this.maybeNotify();
};
var Ke = function(e, t, n, i) {
  for (; e <= t; ) {
    var r = (e + t) / 2 | 0, o = n(r);
    if (o < i) e = r + 1;
    else {
      if (!(o > i)) return r;
      t = r - 1;
    }
  }
  return e > 0 ? e - 1 : 0;
};
var Ge = "undefined" != typeof document ? v.useLayoutEffect : v.useEffect;
var $e = ["value", "label", "index", "selected", "created"];
var Ue = ["highlightedRef", "option", "multi"];
var Ye = ["index", "size", "start", "item", "optionItemProps"];
var Xe = ["__css", "visibleOptions", "isOpen", "getOption", "ref", "optionsRef"];
var qe = ["isActive", "width", "height", "__css"];
var Je = ["width", "height"];
var Qe = ["value", "label"];
var Ze = ["onClick", "__css", "value", "label"];
var et = ["__css", "size", "ariaLabel", "icon", "isOpen"];
var tt = ["__css", "size", "ariaLabel", "icon"];
var nt = ["children"];
var it = ["__css", "textList", "selectedItems", "multi", "selectionVisibleIn"];
var rt = ["__css", "clearable", "clearOnClick", "clearButtonProps", "toggleButtonProps"];
var ot = ["children"];
var lt = ["label", "labelProps", "controlProps", "listProps", "selectedListProps", "actionGroupProps", "size"];
var st = chakra("svg");
var at = (0, import_react2.memo)((e) => {
  const { children: t } = e, n = useMultiStyleConfig("MultiSelect", e), s = omitThemingProps(e), a = Te(), c = Te(), u = (0, import_react2.useMemo)(() => ({ selectLabelId: a, selectInputId: c }), []), d = ye(s), h = (0, import_react2.useMemo)(() => d, [d]), p = (0, import_react2.useMemo)(() => ({ getInputProps: d.getInputProps }), [d.getInputProps]), f = (0, import_react2.useMemo)(() => ({ removeValue: d.removeValue }), [d.removeValue]), m = (0, import_react2.useMemo)(() => ({ value: d.value, multi: d.multi, selectionVisibleIn: d.selectionVisibleIn }), [d.value, d.multi, d.selectionVisibleIn]), g = (0, import_react2.useMemo)(() => ({ isOpen: d.isOpen, setOpen: d.setOpen, clearable: d.clearable, clearAll: d.clearAll }), [d.isOpen, d.setOpen, d.clearable, d.clearAll]);
  return (0, import_jsx_runtime.jsx)(StylesProvider, { value: n, children: (0, import_jsx_runtime.jsx)(ve, { value: u, children: (0, import_jsx_runtime.jsx)(se, { value: h, children: (0, import_jsx_runtime.jsx)(ce, { value: p, children: (0, import_jsx_runtime.jsx)(pe, { value: m, children: (0, import_jsx_runtime.jsx)(de, { value: f, children: (0, import_jsx_runtime.jsx)(me, { value: g, children: (0, import_jsx_runtime.jsx)(chakra.div, { pos: "relative", display: "flex", flexDirection: "column", children: t }) }) }) }) }) }) }) });
});
at.displayName = "Select";
var ct = (0, import_react2.memo)((e) => {
  const t = Ie(e);
  return (0, import_jsx_runtime.jsx)(chakra.label, D({}, e, t));
});
ct.displayName = "SelectLabel";
var ut = (0, import_react2.memo)(({ label: e, created: t }) => (0, import_jsx_runtime.jsxs)(HStack, { justifyContent: "space-between", w: "full", children: [(0, import_jsx_runtime.jsx)(Box, { children: e }), !!t && (0, import_jsx_runtime.jsx)(Tag, { flexShrink: 0, children: (0, import_jsx_runtime.jsx)(TagLabel, { fontSize: "xs", fontWeight: "bold", children: "New" }) })] }));
ut.displayName = "SelectOptionLabel";
var dt = (0, import_react2.memo)((e) => {
  let { value: t, label: n, index: i, selected: o, created: l } = e, s = N(e, $e);
  const a = _e({ value: t, label: n, index: i, selected: o }), { highlightedRef: c, option: u, multi: d } = a, h = N(a, Ue);
  return (0, import_jsx_runtime.jsx)(chakra.li, D({ ref: c && c, role: "option" }, (o || d) && { "aria-selected": !!o }, s, h, { children: (0, import_jsx_runtime.jsx)(ut, { label: (null == u ? void 0 : u.label) || t, created: !!l }) }));
});
dt.displayName = "SelectOptionItem";
var ht = (0, import_react2.memo)((e) => {
  let { index: t, size: n, start: i, item: r, optionItemProps: o } = e, l = N(e, Ye);
  return (0, import_jsx_runtime.jsx)(dt, D({}, o(r.value, t), { style: { position: "absolute", top: 0, left: 0, width: "100%", height: `${n}px`, transform: `translateY(${i}px)` }, selected: r.selected, created: r.created, label: r.label }, l));
});
ht.displayName = "SelectOptionVirtualItem";
var pt = (0, import_react2.memo)(({ label: e = "No results found" }) => {
  const t = useStyles();
  return (0, import_jsx_runtime.jsx)(chakra.li, { __css: t.item, children: (0, import_jsx_runtime.jsx)(ut, { label: e }) });
});
pt.displayName = "EmptySelectResults";
var ft = (0, import_react2.memo)((e) => {
  const t = ze(), { __css: n, visibleOptions: i, isOpen: o, getOption: l, ref: s, optionsRef: a } = t, c = N(t, Xe), u = o, d = (0, import_react2.useCallback)((e2, t2) => {
    const n2 = l(e2);
    return { key: n2.id || te(n2, "option-"), value: n2.value, label: n2.label || ee(n2.value), selected: n2.selected, created: n2.created, index: t2 };
  }, []), h = (0, import_react2.useMemo)(() => "lg" === e.size ? 43 : "sm" === e.size ? 29 : 40, [e.size]), p = (f = Re({ observeElementRect: je, observeElementOffset: Be, scrollToFn: Fe }, { count: i.length, getScrollElement: () => a.current, estimateSize: () => h }), m = v.useReducer(function() {
    return {};
  }, {})[1], g = Re({}, f, { onChange: function(e2) {
    m(), null == f.onChange || f.onChange(e2);
  } }), (b2 = v.useState(function() {
    return new He(g);
  })[0]).setOptions(g), v.useEffect(function() {
    return b2._didMount();
  }, []), Ge(function() {
    return b2._willUpdate();
  }), b2);
  var f, m, g, b2;
  return (0, import_jsx_runtime.jsx)(chakra.ul, D({ ref: s, __css: (0, import_react2.useMemo)(() => D({ listStyle: "none", position: "absolute" }, !u && { display: "none" }, n), [u, n]), "aria-orientation": "vertical", role: "listbox" }, c, e, { children: u && i.length > 0 ? (0, import_jsx_runtime.jsx)("div", { style: { height: `${p.getTotalSize()}px`, width: "100%", position: "relative" }, children: p.getVirtualItems().map((e2) => (0, import_jsx_runtime.jsx)(ht, { optionItemProps: d, item: i[e2.index], index: e2.index, size: e2.size, start: e2.start }, e2.key)) }) : u ? (0, import_jsx_runtime.jsx)(pt, { label: e.emptyResultsLabel }) : null }));
});
ft.displayName = "SelectList";
var mt = (e) => {
  let { isActive: t, width: n = 4, height: i = 4, __css: r } = e, o = N(e, qe);
  return (0, import_jsx_runtime.jsx)(st, D({ viewBox: "0 0 24 24", stroke: "currentColor", fill: "none", width: n, height: i, __css: D({}, r, t && (null == r ? void 0 : r._active)) }, o, { children: (0, import_jsx_runtime.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", d: "M19 9l-7 7-7-7" }) }));
};
var gt = (e) => {
  let { width: t = 4, height: n = 4 } = e, i = N(e, Je);
  return (0, import_jsx_runtime.jsx)(st, D({ viewBox: "0 0 24 24", stroke: "currentColor", fill: "none", width: t, height: n }, i, { children: (0, import_jsx_runtime.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", d: "M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" }) }));
};
var vt = (0, import_react2.memo)((e) => {
  const t = Se(e);
  return (0, import_jsx_runtime.jsx)(chakra.input, D({}, t));
});
vt.displayName = "SelectInput";
var bt = (0, import_react2.memo)((e) => {
  let { value: t, label: n } = e, i = N(e, Qe);
  const r = Ce(D({ value: t, label: n || "", key: i.key || "" }, i)), { onClick: o, __css: l, value: s, label: a } = r, h = N(r, Ze);
  return (0, import_jsx_runtime.jsxs)(Tag, D({ size: i.size }, { sm: { fontSize: "sm" }, md: { fontSize: "md" }, lg: { fontSize: "lg" } }[i.size || "md"] || {}, l, h, { role: "listitem", children: [(0, import_jsx_runtime.jsx)(TagLabel, { children: a || s }), (0, import_jsx_runtime.jsx)(TagCloseButton, { onClick: o })] }));
});
bt.displayName = "SelectedItem";
var yt = (0, import_react2.memo)((e) => {
  const t = Oe(e), { __css: n, size: i = "sm", ariaLabel: r = "toggle menu", icon: o = mt, isOpen: l } = t, s = N(t, et), a = { sm: { height: "6", width: "6" }, md: { height: "8", width: "8" }, lg: { height: "10", width: "10" } }[i] || {};
  return (0, import_jsx_runtime.jsx)(IconButton, D({ tabIndex: 0, size: i, "aria-label": r, "aria-haspopup": true, "aria-expanded": !e.disabled && l, icon: (0, import_jsx_runtime.jsx)(o, { isActive: !e.disabled && l, __css: e.disabled ? void 0 : { transitionDuration: "200ms", transitionProperty: "transform", _active: { transform: "rotate(180deg)" } } }), minWidth: 0 }, a, n, s));
});
yt.displayName = "SelectToggleButton";
var xt = (0, import_react2.memo)((e) => {
  const t = we(e), { __css: n, size: i = "sm", ariaLabel: r = "clear all selected", icon: o = gt } = t, l = N(t, tt), s = { sm: { height: "6", width: "6" }, md: { height: "8", width: "8" }, lg: { height: "10", width: "10" } }[i] || {};
  return (0, import_jsx_runtime.jsx)(IconButton, D({ tabIndex: 0, size: i, "aria-label": r, icon: (0, import_jsx_runtime.jsx)(o, {}), minWidth: 0 }, s, n, l));
});
xt.displayName = "SelectClearButton";
var St = (0, import_react2.memo)((e) => {
  let { children: t } = e, n = N(e, nt);
  const i = Ee(n), { __css: r, textList: o, selectedItems: l, multi: s, selectionVisibleIn: c } = i, u = N(i, it), d = s && c !== le.List, h = s && c === le.List;
  return (0, import_jsx_runtime.jsxs)(Box, D({}, r, u, d ? { role: "list" } : null, { children: [d && (null == l ? void 0 : l.map((e2) => (0, import_jsx_runtime.jsx)(bt, { size: n.size, value: e2.value, label: e2.label }, `selected-item-${e2.value}`))), h && !(null == l || !l.length) && (0, import_jsx_runtime.jsx)(Box, D({ "aria-current": "true" }, null == o ? void 0 : o.__css, { children: null == l ? void 0 : l.map(({ label: e2 }) => e2).join(", ") })), t] }));
});
St.displayName = "SelectedList";
var It = (0, import_react2.memo)((e) => {
  const t = xe(e), { __css: n, clearable: i, clearOnClick: r, clearButtonProps: o, toggleButtonProps: l } = t, a = N(t, rt);
  return (0, import_jsx_runtime.jsxs)(HStack, D({}, n, a, { children: [i && (0, import_jsx_runtime.jsx)(xt, D({ size: e.size, onClick: r }, o)), (0, import_jsx_runtime.jsx)(yt, D({ size: e.size, disabled: e.disabled }, l))] }));
});
It.displayName = "SelectActionGroup";
var Ot = forwardRef((e, t) => {
  let { children: n } = e, i = N(e, ot);
  const { ref: r, __css: o } = Me({ ref: t });
  return (0, import_jsx_runtime.jsx)(Input, D({ ref: r, as: HStack }, o, i, { children: n }));
});
var wt = (e) => {
  let { label: t, labelProps: n, controlProps: i, listProps: r, selectedListProps: o, actionGroupProps: l, size: s = "md" } = e, a = N(e, lt);
  return (0, import_jsx_runtime.jsxs)(at, D({ size: s }, a, { children: [t && (0, import_jsx_runtime.jsx)(ct, D({ size: s }, n, { children: t })), (0, import_jsx_runtime.jsxs)(Ot, D({ size: s, disabled: a.disabled }, i, { children: [(0, import_jsx_runtime.jsx)(St, D({ size: s }, o, { children: (0, import_jsx_runtime.jsx)(vt, { size: s, disabled: a.disabled }) })), (0, import_jsx_runtime.jsx)(It, D({ size: s, disabled: a.disabled }, l))] })), (0, import_jsx_runtime.jsx)(ft, D({ size: s }, r))] }));
};
export {
  st as ChakraSvg,
  U as ChangeActions,
  pt as EmptySelectResults,
  wt as MultiSelect,
  V as MultiSelectTheme,
  at as Select,
  It as SelectActionGroup,
  me as SelectActionProvider,
  Y as SelectActions,
  xt as SelectClearButton,
  Ot as SelectControl,
  ve as SelectIdProvider,
  vt as SelectInput,
  ce as SelectInputProvider,
  ct as SelectLabel,
  ft as SelectList,
  dt as SelectOptionItem,
  ut as SelectOptionLabel,
  ht as SelectOptionVirtualItem,
  se as SelectProvider,
  yt as SelectToggleButton,
  bt as SelectedItem,
  St as SelectedList,
  pe as SelectedListProvider,
  de as SelectedProvider,
  le as SelectionVisibilityMode,
  te as idFromOption,
  ee as labelFromValue,
  ke as uid,
  we as useClearButton,
  Te as useId,
  Le as useMultiSelect,
  ye as useSelect,
  ge as useSelectActionContext,
  xe as useSelectActionGroup,
  Oe as useSelectButton,
  ae as useSelectContext,
  Me as useSelectControl,
  be as useSelectIdContext,
  Se as useSelectInput,
  ue as useSelectInputContext,
  _e as useSelectItem,
  Ie as useSelectLabel,
  ze as useSelectList,
  he as useSelectedContext,
  Ce as useSelectedItem,
  Ee as useSelectedList,
  fe as useSelectedListContext
};
//# sourceMappingURL=chakra-multiselect.js.map
